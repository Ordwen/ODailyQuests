name: Snapshots

on:
  push:
    branches:
      - '3.0.0'
  workflow_dispatch:

env:
  SNAPSHOT_BRANCH: 3.0.0
  JAVA_VERSION: '21'


jobs:
  build-snapshot:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Compute meta (version & sha)
        id: meta
        run: |
          SHA=$(git rev-parse --short HEAD)
          echo "sha=$SHA" >> $GITHUB_OUTPUT
          echo "version=3.0.0-SNAPSHOT+$SHA" >> $GITHUB_OUTPUT

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build (set Gradle version from CI)
        run: ./gradlew clean build -x test
        env:
          ORG_GRADLE_PROJECT_version: ${{ steps.meta.outputs.version }}

      - name: Find JAR
        id: findjar
        run: |
          JAR=$(ls **/build/libs/*.jar | head -n1)
          echo "jar=$JAR" >> $GITHUB_OUTPUT

      - name: Create/Update prerelease (nightly)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: nightly-${{ env.SNAPSHOT_BRANCH }}
          name: "Nightly ${{ env.SNAPSHOT_BRANCH }}"
          body: |
            ⚠️ Development snapshot (unsupported)
            Commit: ${{ github.sha }}
            Version: ${{ steps.meta.outputs.version }}
          draft: false
          prerelease: true
          files: ${{ steps.findjar.outputs.jar }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build mini changelog (last 10 commits)
        id: changelog
        run: |
          echo "changes<<EOF" >> $GITHUB_OUTPUT
          git log -n 10 --pretty=format:'- %h %s' >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Compute public release URL
        id: relurl
        run: |
          echo "url=https://github.com/${GITHUB_REPOSITORY}/releases/tag/nightly-${{ env.SNAPSHOT_BRANCH }}" >> $GITHUB_OUTPUT

      - name: Post Discord embed
        env:
          WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
          VERSION: ${{ steps.meta.outputs.version }}
          SHA: ${{ steps.meta.outputs.sha }}
          URL: ${{ steps.relurl.outputs.url }}
          CHANGES: ${{ steps.changelog.outputs.changes }}
        run: |
          if [ -z "$WEBHOOK" ]; then
            echo "No webhook configured, skipping Discord notification."
            exit 0
          fi
          
          DESC="$(printf '%s\n\n**Download & notes:** %s' "$CHANGES" "$URL")"
          DESC="${DESC:0:1900}"

          curl -X POST -H "Content-Type: application/json" -d "$(jq -nc --arg v "$VERSION" --arg s "$SHA" --arg d "$DESC" --arg u "$URL" \
          '{embeds: [{title: ("ODailyQuests Snapshot " + $v), url: $u, description: $d, color: 16753920, footer: {text: ("Commit " + $s)}}]}')" "$WEBHOOK"
